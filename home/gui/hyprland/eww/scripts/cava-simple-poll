#!/bin/bash

# Simple cava polling script for eww
# Uses a persistent cava process with FIFO

FIFO="/tmp/cava-eww-simple.fifo"
PIDFILE="/tmp/cava-eww-simple.pid"
CONFIG="/tmp/cava-working.conf"

# Function to start cava if not running
start_cava() {
    if [ ! -p "$FIFO" ]; then
        mkfifo "$FIFO" 2>/dev/null
    fi
    
    # Check if cava is already running
    if [ -f "$PIDFILE" ] && kill -0 "$(cat "$PIDFILE" 2>/dev/null)" 2>/dev/null; then
        return 0
    fi
    
    # Start cava in background
    nohup nix-shell -p cava --run "cava -p '$CONFIG'" > "$FIFO" 2>/dev/null &
    local cava_pid=$!
    echo $cava_pid > "$PIDFILE"
    
    # Wait a moment for cava to initialize
    sleep 0.2
}

# Function to read cava data
read_cava() {
    if [ -p "$FIFO" ]; then
        # Read with very short timeout
        local line=$(timeout 0.05 head -1 "$FIFO" 2>/dev/null)
        if [ -n "$line" ]; then
            echo "$line"
        fi
    fi
}

# Function to process line into bars
process_bars() {
    local line="$1"
    local bars=""
    local count=0
    
    for val in $line; do
        if [ $count -ge 10 ]; then
            break
        fi
        case $val in
            0|1) bars+="▁" ;;
            2) bars+="▂" ;;
            3) bars+="▃" ;;
            4) bars+="▄" ;;
            5) bars+="▅" ;;
            6) bars+="▆" ;;
            7) bars+="▇" ;;
            *) bars+="█" ;;
        esac
        ((count++))
    done
    echo "$bars"
}

# Main execution
start_cava
line=$(read_cava)

if [ -n "$line" ]; then
    process_bars "$line"
else
    echo "▁▁▁▁▁▁▁▁▁▁"
fi