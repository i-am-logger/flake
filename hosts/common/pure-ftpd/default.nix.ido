{ pkgs, config, ... }:
let
  START_PORT = 50000;
  END_PORT = 50100;
  PORT = 21;
  USER = "ftp";
  GROUP = USER;
  DIR = /data/ftp;
  # TODO: contribute to nixOS services

  # passwdFile = pkgs.writeText "/data/ftp/pure-ftpd.passwd" ''''
  # pure-ftpd_config = pkgs.concatText "pure-ftpd.conf" [ configFile ];
  # passwdFile = pkgs.concatText "pure-ftpd.passwd" [ ./pure-ftpd.passwd ];
  # pdbFile = pkgs.concatText "pure-ftpd.pdb" [ ./pure-ftpd.pdb ];
  passwdFile = "/data/ftp/pure-ftpd.passwd";
  pdbFile = "/data/ftp/pure-ftpd.pdb";

in
{
  nixpkgs.config.packageOverrides = pkgs: {
    pure-ftpd = pkgs.pure-ftpd.overrideAttrs (oldAttrs: {
      configureFlags = oldAttrs.configureFlags ++ [ "--with-puredb" ];
    });
  };

  systemd.services.pure-ftpd = {
    description = "PureFTPD Server";
    wantedBy = [ "multi-user.target" ];
    serviceConfig = {
      ExecStart = "${pkgs.pure-ftpd}/bin/pure-ftpd -d --noanonymous --notruncate --login puredb:${pdbFile} --prohibitdotfilesread --maxdiskusagepct 90% --bind ${toString PORT} --chrooteveryone --nochmod --customerproof --dontresolve --passiveportrange ${toString START_PORT}:${toString END_PORT}";

      # Type = "simple";
    };

    environment = {
      PURE_PASSWDFILE = passwdFile;
      PURE_DBFILE = pdbFile;
    };
  };

  users.extraGroups.${GROUP}.gid = config.ids.gids.${GROUP};
  users.extraUsers.${USER} = {
    uid = config.ids.uids.${USER};
    group = GROUP;
    description = "FTP user";
    home = DIR;
  };

  networking.firewall.allowedTCPPorts = [ PORT ];
  networking.firewall.allowedTCPPortRanges = [{ from = START_PORT; to = END_PORT; }];
}









